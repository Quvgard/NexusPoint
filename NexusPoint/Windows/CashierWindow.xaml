<Window x:Class="NexusPoint.Windows.CashierWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NexusPoint.Windows"
        xmlns:converters="clr-namespace:NexusPoint.Utils.Converters"
        mc:Ignorable="d"
        Title="NexusPoint - Касса" Height="768" Width="1024"
        WindowState="Maximized"
        WindowStyle="None"
        Loaded="Window_Loaded"
        KeyDown="Window_KeyDown" >
    <!-- Ресурсы окна (конвертеры) -->
    <Window.Resources>
        <!-- Конвертер для получения индекса элемента в ListView -->
        <converters:IndexConverter x:Key="IndexConverter"/>
        <!-- Конвертер для отображения символа маркировки -->
        <converters:MarkingCodeToSymbolConverter x:Key="MarkingCodeToSymbolConverter"/>
    </Window.Resources>
    
    <Grid Background="#F0F0F0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <!-- Левая: Список товаров (чек) -->
            <ColumnDefinition Width="350"/>
            <!-- Правая: Итоги и управление -->
        </Grid.ColumnDefinitions>

        <!-- Левая панель: Ввод и Чек -->
        <Grid Grid.Column="0" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <!-- Область ввода товара -->
                <RowDefinition Height="Auto"/>
                <!-- Информация о последнем товаре -->
                <RowDefinition Height="*"/>
                <!-- Список товаров в чеке -->
            </Grid.RowDefinitions>

            <!-- Область ввода товара -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
                <Label Content="Код/ШК:" VerticalAlignment="Center" FontWeight="Bold" FontSize="14"/>
                <TextBox x:Name="ItemInputTextBox" Width="300" Height="30" VerticalContentAlignment="Center" FontSize="14" Margin="5,0"
                         KeyDown="ItemInputTextBox_KeyDown"/>
                <!-- Можно добавить кнопку "Добавить", но Enter удобнее -->
            </StackPanel>

            <!-- Инфо о последнем добавленном/найденном товаре -->
            <Border Grid.Row="1" Background="WhiteSmoke" BorderBrush="LightGray" BorderThickness="1" Padding="10" Margin="0,0,0,10">
                <TextBlock x:Name="LastItemInfoText" Text="-" TextWrapping="Wrap" FontSize="13"/>
            </Border>


            <!-- Список товаров в чеке -->
            <ListView Grid.Row="2" x:Name="CheckListView" Background="White" BorderBrush="LightGray" BorderThickness="1"
                      SelectionMode="Single" FontSize="14">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="№" DisplayMemberBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource IndexConverter}}" Width="40"/>
                        <GridViewColumn Header="Наименование" DisplayMemberBinding="{Binding ProductName}" Width="300"/>
                        <!-- Потребуется доп. модель -->
                        <GridViewColumn Header="Кол-во" DisplayMemberBinding="{Binding Quantity}" Width="70"/>
                        <GridViewColumn Header="Цена"
                                        DisplayMemberBinding="{Binding PriceAtSale, StringFormat={}{0:C2}, ConverterCulture=ru-RU}"
                                        Width="90"/>
                        <GridViewColumn Header="Скидка"
                                        DisplayMemberBinding="{Binding DiscountAmount, StringFormat={}{0:C2}, ConverterCulture=ru-RU}"
                                        Width="80"/>
                        <GridViewColumn Header="Сумма"
                                        DisplayMemberBinding="{Binding CalculatedItemTotalAmount, StringFormat={}{0:C2}, ConverterCulture=ru-RU}"
                                        Width="100"/>
                        <GridViewColumn Header="Марк." Width="50">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding MarkingCode, Converter={StaticResource MarkingCodeToSymbolConverter}}" HorizontalAlignment="Center" FontWeight="Bold"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
                <!-- Контекстное меню для элемента (опционально) -->
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Изменить количество" Click="ChangeQuantityMenuItem_Click"/>
                        <MenuItem Header="Удалить позицию" Click="DeleteCheckItemMenuItem_Click"/>
                        <!-- Можно добавить "Применить скидку на позицию" -->
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>

        </Grid>

        <!-- Правая панель: Итоги и Кнопки -->
        <Grid Grid.Column="1" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <!-- Заголовок -->
                <RowDefinition Height="Auto"/>
                <!-- Итоги -->
                <RowDefinition Height="*"/>
                <!-- Кнопки -->
                <RowDefinition Height="Auto"/>
                <!-- Строка состояния/меню -->
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Text="Текущий чек" FontSize="18" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,0,0,15"/>

            <!-- Область итогов -->
            <Border Grid.Row="1" Background="White" BorderBrush="DarkGray" BorderThickness="1" Padding="15" Margin="0,0,0,15">
                <StackPanel>
                    <Grid Margin="0,5">
                        <TextBlock Text="Подытог:" FontSize="16"/>
                        <TextBlock x:Name="SubtotalText" Text="0.00" FontSize="16" FontWeight="SemiBold" HorizontalAlignment="Right"/>
                    </Grid>
                    <Grid Margin="0,5">
                        <TextBlock Text="Скидка:" FontSize="16"/>
                        <TextBlock x:Name="DiscountText" Text="0.00" FontSize="16" FontWeight="SemiBold" HorizontalAlignment="Right"/>
                    </Grid>
                    <Separator Margin="0,10"/>
                    <Grid Margin="0,5">
                        <TextBlock Text="ИТОГО:" FontSize="22" FontWeight="Bold"/>
                        <TextBlock x:Name="TotalAmountText" Text="0.00" FontSize="22" FontWeight="Bold" HorizontalAlignment="Right"/>
                    </Grid>
                </StackPanel>
            </Border>

            <!-- Основные кнопки действий -->
            <UniformGrid Grid.Row="2" Columns="2" Rows="4" Margin="0,10,0,0">
                <!-- Оплата (самая важная кнопка) -->
                <Button x:Name="PaymentButton" Content="[F5] Оплата" Height="60" FontSize="16" FontWeight="Bold" Background="DarkSeaGreen" Margin="5" Click="PaymentButton_Click"/>

                <!-- Другие кнопки -->
                <Button x:Name="QuantityButton" Content="[F2] Кол-во" Height="60" FontSize="16" Margin="5" Click="QuantityButton_Click"/>
                <Button x:Name="DeleteItemButton" Content="[Del] Удалить" Height="60" FontSize="16" Margin="5" Click="DeleteCheckItemButton_Click"/>
                <Button x:Name="ReturnModeButton" Content="[F6] Возврат" Height="60" FontSize="16" Margin="5" Click="ReturnModeButton_Click"/>
                <Button x:Name="ManualDiscountButton" Content="[F4] Скидка" Height="60" FontSize="16" Margin="5" Click="ManualDiscountButton_Click"/>
                
                <!-- Пока отключим -->
                <Button x:Name="PrintDocButton" Content="Печать док." Height="60" FontSize="16" Margin="5" Click="PrintDocButton_Click"/>
                <Button x:Name="LookupItemButton" Content="Инфо о товаре" Height="60" FontSize="16" Margin="5" Click="LookupItemButton_Click"/>
                <Button x:Name="CancelCheckButton" Content="Отмена чека" Height="60" FontSize="16" Background="#FFCACA" Margin="5" Click="CancelCheckButton_Click"/>
                

            </UniformGrid>

            <!-- Строка состояния и Меню (Двухстрочная) -->
            <StatusBar Grid.Row="3" VerticalAlignment="Bottom" Padding="0">
                <StatusBarItem>
                    <!-- Один элемент на всю ширину -->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- Строка 1: Кассир, Смена -->
                            <RowDefinition Height="Auto"/>
                            <!-- Строка 2: Меню, Время -->
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <!-- Левая колонка (растягивается) -->
                            <ColumnDefinition Width="Auto"/>
                            <!-- Правая колонка (авторазмер) -->
                        </Grid.ColumnDefinitions>

                        <!-- Строка 1 -->
                        <TextBlock Grid.Row="0" Grid.Column="0" x:Name="CashierInfoStatusText" Text="Кассир: -" Margin="5,2" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" x:Name="ShiftInfoStatusText" Text="Смена: -" Margin="5,2" VerticalAlignment="Center" HorizontalAlignment="Right"/>

                        <!-- Строка 2 -->
                        <Button Grid.Row="1" Grid.Column="0" x:Name="MenuButton" Content="Меню [F12]" Padding="5,2" Click="MenuButton_Click" Margin="5,2" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        <TextBlock Grid.Row="1" Grid.Column="1" x:Name="ClockTextBlock" Text="00:00" Margin="5,2" VerticalAlignment="Center" HorizontalAlignment="Right"/>

                    </Grid>
                </StatusBarItem>
            </StatusBar>
            <!-- Всплывающее меню для кнопки Меню -->
            <Popup x:Name="MainMenuPopup" PlacementTarget="{Binding ElementName=MenuButton}" Placement="Top" StaysOpen="False"
                   AllowsTransparency="True" PopupAnimation="Fade"
                   Opened="MainMenuPopup_Opened">
                <!-- Добавляем обработчик открытия -->
                <Popup.Resources>
                    <!-- Стиль для Separator -->
                    <Style TargetType="Separator">
                        <Setter Property="Height" Value="1"/>
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Margin" Value="4,5"/>
                    </Style>
                    <!-- СТИЛЬ ДЛЯ ListBoxItem -->
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <!-- Растягиваем контент -->
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="6,4"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <!-- Убираем рамку самого элемента -->
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <!-- Убираем стандартную рамку фокуса -->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            SnapsToDevicePixels="true">
                                        <!-- Используем ContentPresenter для отображения содержимого -->
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!-- Подсветка при наведении мыши -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="Bd" Value="#3D26A0DA"/>
                                            <!-- Полупрозрачный синий -->
                                            <Setter Property="TextBlock.Foreground" Value="Black"/>
                                        </Trigger>
                                        <!-- Подсветка при ВЫБОРЕ -->
                                        <Trigger Property="IsSelected" Value="True">
                                            <!-- *** ИЗМЕНЯЕМ ЗДЕСЬ *** -->
                                            <!-- Используем тот же цвет, что и для MouseOver -->
                                            <Setter Property="Background" TargetName="Bd" Value="#3D26A0DA"/>
                                            <!-- Текст тоже сделаем черным для единообразия с MouseOver -->
                                            <Setter Property="TextBlock.Foreground" Value="Black"/>
                                            <!-- Старый вариант:
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                            -->
                                        </Trigger>
                                        <!-- Стиль для неактивных -->
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Popup.Resources>

                <!-- Используем ListBox вместо Menu -->
                <Border Background="WhiteSmoke" BorderBrush="Gray" BorderThickness="1" CornerRadius="2">
                    <ListBox x:Name="MenuListBox" BorderThickness="0" Focusable="True"
                               ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                        KeyDown="MenuListBox_KeyDown"
                     
                        MouseDoubleClick="MenuListBox_MouseDoubleClick">
                       
                        <ListBoxItem x:Name="OpenShiftItem" Content="Открыть смену"/>
                        <ListBoxItem x:Name="CloseShiftItem" Content="Закрыть смену"/>
                        <Separator/>
                        <ListBoxItem x:Name="CashInItem" Content="Внесение наличных"/>
                        <ListBoxItem x:Name="CashOutItem" Content="Изъятие наличных"/>
                        <Separator/>
                        <ListBoxItem x:Name="LockStationItem" Content="Блокировать" IsEnabled="False"/>
                        <ListBoxItem x:Name="LogoutItem" Content="Выход из системы"/>
                    </ListBox>
                </Border>
            </Popup>

        </Grid>

        <!-- Оверлей для блокировки или сообщений -->
        <Border x:Name="OverlayBorder" Background="#AA000000" Visibility="Collapsed">
            <TextBlock x:Name="OverlayText" Text="Смена не открыта!" FontSize="24" Foreground="White"
                       HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
        </Border>

    </Grid>

</Window>